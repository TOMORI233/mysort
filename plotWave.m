function plotWave(result, visibilityOpt, saveFlag)
    % Description: plot waves of each cluster, with cluster 0 as noise
    % Input:
    %     result: struct generated by function sortMultiChannel
    %     visibilityOpt: figure visibility, "on" or "off"
    %     saveFlag: save the figure or not, true or false
    % Output: null

    for eIndex = 1:length(result)

        if ~isempty(result(eIndex).clusterIdx)
            Fig = figure;
            set(Fig, "outerposition", get(0, "screensize"));
            set(Fig, "Visible", visibilityOpt);

            plotCol = 2;

            for cIndex = 0:result(eIndex).K
                plotData = result(eIndex).wave(result(eIndex).clusterIdx == cIndex, :);

                if ~isempty(plotData)
                    subplot(ceil((result(eIndex).K + 1) / plotCol), plotCol, cIndex + 1);
                    meanValue = mean(plotData);
                    stdValue = std(plotData);
                    x = 1:size(plotData, 2);
                    xSmooth = linspace(min(x), max(x));
                    yMin = min(result(eIndex).wave(result(eIndex).clusterIdx ~= 0, :), [], "all");
                    yMax = max(result(eIndex).wave(result(eIndex).clusterIdx ~= 0, :), [], "all");

                    for pIndex = 1:min([200, size(plotData, 1)])
                        y = interp1(x, plotData(pIndex, :), xSmooth, 'cubic');
                        h = plot(xSmooth, y, 'b', 'DisplayName', 'Samples');
                        hold on;

                        if pIndex > 1
                            set(get(get(h, 'Annotation'), 'LegendInformation'), 'IconDisplayStyle', 'off');
                        end

                    end

                    if size(plotData, 1) > 1
                        y1 = interp1(x, meanValue + stdValue, xSmooth, 'cubic');
                        y2 = interp1(x, meanValue - stdValue, xSmooth, 'cubic');
                        fill([xSmooth fliplr(xSmooth)], [y1 fliplr(y2)], [230, 230, 230] / 255, 'edgealpha', '0', 'facealpha', '.6', 'DisplayName', 'Error bar');
                        plot(xSmooth, interp1(x, meanValue, xSmooth, 'cubic'), 'r', 'LineWidth', 2, 'DisplayName', 'Mean');
                    end

                    if cIndex > 0
                        title(['Channel: ' num2str(result(eIndex).chanIdx) ' | nSamples = ' num2str(size(plotData, 1)) ' | cluster ' num2str(cIndex)]);
                        ylim([yMin yMax]);
                    else
                        title(['Channel: ' num2str(result(eIndex).chanIdx) ' | nSamples = ' num2str(size(plotData, 1)) ' | noise']);
                    end

                    legend;
                    drawnow;
                end

            end

            if saveFlag
                figPath = 'wave figs';
                mkdir(figPath);
                saveas(Fig, [figPath, '\e', num2str(result(eIndex).chanIdx), '.jpg']);
                close;
            end

        end

    end

end
