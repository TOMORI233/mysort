function plotPCA(result, PCShown, visibilityOpt, saveFlag)
    % Description: plot raster in PCA space, dimensions specified by PCShown
    % Input:
    %     result: struct generated by function sortMultiChannel
    %     PCShown: a vector containing PC dimensions to be shown, length of which is either 2 or 3 (default: [1 2])
    %     visibilityOpt: figure visibility, "on"(default) or "off"
    %     saveFlag: save the figure or not, true or false(default)
    % Output: null

    narginchk(1, 4);

    if nargin == 1
        PCShown = [1 2];
        visibilityOpt = "on";
        saveFlag = false;
    elseif nargin == 2
        visibilityOpt = "on";
        saveFlag = false;
    elseif nargin == 3
        saveFlag = false;
    end

    PCx = PCShown(1);
    PCy = PCShown(2);

    if length(PCShown) > 2
        PCz = PCShown(3);
    end

    for eIndex = 1:length(result)
        Fig = figure;
        set(Fig, "outerposition", get(0, "screensize"));
        set(Fig, "Visible", visibilityOpt);

        for index = 1:result(eIndex).K
            x = result(eIndex).pcaData(result(eIndex).clusterIdx == index, PCx);
            y = result(eIndex).pcaData(result(eIndex).clusterIdx == index, PCy);
            cx = result(eIndex).clusterCenter(index, PCx);
            cy = result(eIndex).clusterCenter(index, PCy);

            if exist("PCz", "var")
                z = result(eIndex).pcaData(result(eIndex).clusterIdx == index, PCz);
                cz = result(eIndex).clusterCenter(index, PCz);
                plot3(x, y, z, '.', 'MarkerSize', 12, 'DisplayName', ['cluster ' num2str(index)]); hold on;
                h = plot3(cx, cy, cz, 'kh', 'LineWidth', 1.2, 'MarkerSize', 15);
                grid on;
                zlabel(['PC-' num2str(PCz)]);
            else
                plot(x, y, '.', 'MarkerSize', 12, 'DisplayName', ['cluster ' num2str(index)]); hold on;
                h = plot(cx, cy, 'kx', 'LineWidth', 1.2, 'MarkerSize', 15);
            end

            set(get(get(h, 'Annotation'), 'LegendInformation'), 'IconDisplayStyle', 'off');
        end

        % Noise
        nx = result(eIndex).pcaData(result(eIndex).clusterIdx == 0, PCx);
        ny = result(eIndex).pcaData(result(eIndex).clusterIdx == 0, PCy);

        if exist("PCz", "var")
            nz = result(eIndex).pcaData(result(eIndex).clusterIdx == 0, PCz);
            plot3(nx, ny, nz, 'ko', 'DisplayName', 'Noise');
        else
            plot(nx, ny, 'ko', 'DisplayName', 'Noise');
        end

        % Origin data
        % plot(result(eIndex).pcaData(:, PCx), result(eIndex).pcaData(:, PCy), 'k.', 'MarkerSize', 12, 'DisplayName', 'Origin');

        legend;
        title(['Channel: ' num2str(result(eIndex).chanIdx)]);
        xlabel(['PC-' num2str(PCx)]);
        ylabel(['PC-' num2str(PCy)]);

        if saveFlag
            figPath = 'pca figs';
            mkdir(figPath);
            saveas(Fig, [figPath, '\e', num2str(result(eIndex).chanIdx), '.jpg']);
            close;
        end

    end

end
