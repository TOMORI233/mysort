function MSEFigs = plotMSE(result, visibilityOpt, colors)
    % Description: plot MSE of each template on each cluster
    % Input:
    %     result: struct generated by mysort
    % Output:
    %     Figs: one histogram figure for one cluster

    narginchk(1, 2);

    if nargin < 2
        visibilityOpt = "on";
    end
        
    if nargin < 3
        colors = generateColorGrad(12, 'red', [1, 4, 7, 10], 'green', [2, 5, 8, 11], 'blue', [3, 6, 9, 12]);
    end

    for eIndex = 1:length(result)
        Waveforms = result(eIndex).wave;
        templates = result(eIndex).templates;
        [tNum, ~] = size(templates);
        MSE = calMSE(Waveforms, templates);

        crossResult = cell(tNum);

        colorsAll = repmat(reshape(colors, [length(colors), 1]), ceil(tNum / length(colors)) * length(colors), 1);

        for t1 = 1:tNum
            MSEFigs(t1) = figure;
            maximizeFig(MSEFigs(t1));
            set(MSEFigs(t1), "Visible", visibilityOpt);

            % similarity of template t2 on cluster t1
            for t2 = 1:tNum
                crossResult{t1, t2} = MSE(result(eIndex).clusterIdx == t1 | (result(eIndex).clusterIdx == t1 & result.noiseClusterIdx == t1), t2);
                histogram(crossResult{t1, t2}, "FaceColor", colorsAll{t2}, "DisplayName", ['template ', num2str(t2)]); hold on;
            end

            title(['MSE of each template on cluster ', num2str(t1)]);
            xlabel('Mean square error of templates and spike waveforms');
            legend;
        end

    end

    return;
end
